// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserApp.Models;

namespace UserApp.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20220319140903_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserApp.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdminId");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("285c1dca-748d-41fc-87fc-4f779afe1d96"),
                            Login = "Admin1",
                            Password = "46564",
                            Post = "Lead Admin"
                        },
                        new
                        {
                            Id = new Guid("35f701f3-3d03-4c69-b0ec-9688e8abe19e"),
                            Login = "Admin2",
                            Password = "132312",
                            Post = "Middle Admin"
                        },
                        new
                        {
                            Id = new Guid("f17058d9-46d0-4f42-b28a-1b168a713f50"),
                            Login = "Admin3",
                            Password = "963852",
                            Post = "Junior Admin"
                        });
                });

            modelBuilder.Entity("UserApp.Models.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageId");

                    b.Property<string>("Allowance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98780c10-4a78-4e3d-a219-b08161878402"),
                            Allowance = "Editor"
                        },
                        new
                        {
                            Id = new Guid("802d66a4-d17d-4643-810b-9daa62e21ed0"),
                            Allowance = "Viwer"
                        },
                        new
                        {
                            Id = new Guid("086410cb-802e-4df1-8094-483af4b264ee"),
                            Allowance = "Field Worker"
                        });
                });

            modelBuilder.Entity("UserApp.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("753fd9fb-e3a5-4188-bf3b-95fc0ef6d0b7"),
                            Age = 19,
                            Login = "Ilya228",
                            Name = "Ilya",
                            Password = "123456",
                            RoleId = new Guid("1820fb8d-66cf-4a49-adf7-de943ea9e3d7"),
                            Surname = "Kuzhanov"
                        },
                        new
                        {
                            Id = new Guid("af301fd9-08d8-44ae-a255-6d138c8e000a"),
                            Age = 35,
                            Login = "PetrPerviy",
                            Name = "Petr",
                            Password = "332211",
                            RoleId = new Guid("1c1f366b-7e15-455d-b193-20520c3d1b20"),
                            Surname = "Petrov"
                        },
                        new
                        {
                            Id = new Guid("66e9c50e-7994-4301-a5fe-4e29c88432e0"),
                            Age = 40,
                            Login = "Vanyaaa",
                            Name = "Ivan",
                            Password = "45645",
                            RoleId = new Guid("60ad944d-a773-426f-a92d-f0e7b9921086"),
                            Surname = "Ivanov"
                        });
                });

            modelBuilder.Entity("UserApp.Models.UserPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserPageId");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("PageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00ea78cb-8c55-49cb-b1b4-fb23ec5e1780"),
                            AdminId = new Guid("285c1dca-748d-41fc-87fc-4f779afe1d96"),
                            PageId = new Guid("98780c10-4a78-4e3d-a219-b08161878402"),
                            UserId = new Guid("753fd9fb-e3a5-4188-bf3b-95fc0ef6d0b7")
                        },
                        new
                        {
                            Id = new Guid("c71507e1-1996-4c71-9ea6-9590524b29e9"),
                            AdminId = new Guid("35f701f3-3d03-4c69-b0ec-9688e8abe19e"),
                            PageId = new Guid("802d66a4-d17d-4643-810b-9daa62e21ed0"),
                            UserId = new Guid("af301fd9-08d8-44ae-a255-6d138c8e000a")
                        },
                        new
                        {
                            Id = new Guid("5859ecfc-5aae-4063-aae7-667fcec51f26"),
                            AdminId = new Guid("f17058d9-46d0-4f42-b28a-1b168a713f50"),
                            PageId = new Guid("086410cb-802e-4df1-8094-483af4b264ee"),
                            UserId = new Guid("66e9c50e-7994-4301-a5fe-4e29c88432e0")
                        });
                });

            modelBuilder.Entity("UserApp.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1820fb8d-66cf-4a49-adf7-de943ea9e3d7"),
                            Name = "Editor"
                        },
                        new
                        {
                            Id = new Guid("1c1f366b-7e15-455d-b193-20520c3d1b20"),
                            Name = "Viwer"
                        },
                        new
                        {
                            Id = new Guid("60ad944d-a773-426f-a92d-f0e7b9921086"),
                            Name = "Field Worker"
                        });
                });

            modelBuilder.Entity("UserApp.Models.User", b =>
                {
                    b.HasOne("UserApp.Models.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("UserApp.Models.UserPage", b =>
                {
                    b.HasOne("UserApp.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserApp.Models.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Page");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserApp.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
